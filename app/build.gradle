plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'

}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.notesapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def BASE_URL = "BASE_URL"

    flavorDimensions "dev"

    productFlavors{
        free{
            dimension "dev"
            manifestPlaceholders variant: 'Free'
            applicationIdSuffix ".free"
            buildConfigField "String", BASE_URL, BASE_URL_FREE
            buildConfigField "String", "DEFAULT_URL", DEFAULT_URL_FREE
            buildConfigField "long", "TIME_CONSTANT", 'System.currentTimeMillis()'
        }
        paid{
            dimension "dev"
            manifestPlaceholders variant: 'Paid'
            applicationIdSuffix ".paid"
            buildConfigField "String", BASE_URL, BASE_URL_PAID
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        customDebug{
            debuggable true
            applicationIdSuffix ".customDebug"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
//By using below code you can ignore freeRelease Build Variant, so this will not be visible to you
    variantFilter { variant ->
        def name_types = variant.flavors*.name
        def name = name_types.join()

        if(variant.buildType.name == "release" && name.contains("free")){
            setIgnore(true)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    lintOptions {
        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
         htmlReport true
         // optional path to report (default will be lint-results.html in the builddir)
        htmlOutput file("lint-report.html")
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, show all locations for an error, do not truncate lists, etc.
        showAll true
    }

}

dependencies {

    apply plugin: 'kotlin-android-extensions'

    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.activity:activity-ktx:$rootProject.activityVersion"

    // Dependencies for working with Architecture components
    // You'll probably have to update the version numbers in build.gradle (Project)

    // Room components
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"

    // Kotlin components
  //  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

    // UI
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"

    // Testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation ("androidx.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxJunitVersion"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    implementation 'com.jjoe64:graphview:4.2.2'

}